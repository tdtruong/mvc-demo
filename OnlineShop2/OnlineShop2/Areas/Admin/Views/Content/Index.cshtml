@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@model PagedList.IPagedList<Model.EF.Content>
@using PagedList.Mvc;

@section header {Content}

@section jsFooter{
    <script src="~/Assets/admin/js/controllers/contentController.js"></script>
}

<div class="row">
    <div class="col-lg-6">
        @using (Html.BeginForm("Index", "Content", FormMethod.Get))
            {
            <div class="form-group input-group">
                <input type="text" class="form-control" value="@ViewBag.SearchString" name="searchString" placeholder="Enter the content name..." />
                <span class="input-group-btn">
                    <button class="btn btn-default" type="submit">
                        <i class="fa fa-search"></i>
                    </button>
                </span>
            </div>
        }
    </div>
    <div class="col-lg-12">
        @if (ViewBag.ErrorContent != null)
        {
            <div>
                <span class="alert alert-danger">@ViewBag.ErrorContent</span>
            </div>
        }
        <p>
            @Html.ActionLink("Create New", "Create", null, new { @class = "form-group" })
        </p>
        <div class="table-responsive">
            <table class="table table-striped table-bordered table-hover">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Description</th>
                        <th>CategoryID</th>
                        <th>Detail</th>
                        <th>ViewCount</th>
                        <th>Status</th>
                        <th>Tags</th>
                        <th>&nbsp;</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr id="row_@item.ID">
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @Html.Raw(item.Description)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CategoryID)
                            </td>
                            <td>
                                @if (!string.IsNullOrEmpty(item.Detail))
                                {
                                    @Html.Raw(string.Format("<div class='detail short-content-detail'>{0}</div>", item.Detail))
                                    <a class="view-full-content-detail" href="#">more...</a>
                                }
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ViewCount)
                            </td>
                            <td>
                                <a href="#" class="btn-active" data-id="@item.ID">@(item.Status ? "Active" : "Blocked")</a>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Tags)
                            </td>
                            <td>
                                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                                @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                                @Ajax.ActionLink("Delete", "Delete", new { id = item.ID }, new AjaxOptions {
                                    Confirm = "Are you sure want to delete this content?",
                                    OnComplete = "$('#row_" + @item.ID + "').remove()",
                                    HttpMethod = "Delete"
                                })
                                @Html.ActionLink("Delete NonAjax", "Delete", new { id = item.ID })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            @{
                if (Model.PageCount > 1)
                {
                    @Html.PagedListPager(Model, pageNumber => Url.Action("Index", new { pageNumber, @searchString = @ViewBag.SearchString }))
                }
            }
        </div>
    </div>
</div>
